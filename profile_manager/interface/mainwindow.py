# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.12.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(750, 372)
        self.centralWidget = QtWidgets.QWidget(MainWindow)
        self.centralWidget.setObjectName("centralWidget")
        self.groupBox = QtWidgets.QGroupBox(self.centralWidget)
        self.groupBox.setGeometry(QtCore.QRect(10, 10, 721, 261))
        self.groupBox.setObjectName("groupBox")
        self.pushButtonCopy = QtWidgets.QPushButton(self.groupBox)
        self.pushButtonCopy.setGeometry(QtCore.QRect(350, 210, 101, 31))
        self.pushButtonCopy.setObjectName("pushButtonCopy")
        self.listViewDestinationAccounts = QtWidgets.QListView(self.groupBox)
        self.listViewDestinationAccounts.setGeometry(QtCore.QRect(420, 90, 291, 111))
        self.listViewDestinationAccounts.setObjectName("listViewDestinationAccounts")
        self.comboBoxDestinationProfiles = QtWidgets.QComboBox(self.groupBox)
        self.comboBoxDestinationProfiles.setGeometry(QtCore.QRect(420, 60, 291, 22))
        self.comboBoxDestinationProfiles.setObjectName("comboBoxDestinationProfiles")
        self.comboBoxDestinationInstalls = QtWidgets.QComboBox(self.groupBox)
        self.comboBoxDestinationInstalls.setGeometry(QtCore.QRect(420, 30, 291, 22))
        self.comboBoxDestinationInstalls.setObjectName("comboBoxDestinationInstalls")
        self.comboBoxOriginProfiles = QtWidgets.QComboBox(self.groupBox)
        self.comboBoxOriginProfiles.setGeometry(QtCore.QRect(90, 60, 291, 22))
        self.comboBoxOriginProfiles.setObjectName("comboBoxOriginProfiles")
        self.listViewOriginAccounts = QtWidgets.QListView(self.groupBox)
        self.listViewOriginAccounts.setGeometry(QtCore.QRect(90, 90, 291, 111))
        self.listViewOriginAccounts.setObjectName("listViewOriginAccounts")
        self.comboBoxOriginInstalls = QtWidgets.QComboBox(self.groupBox)
        self.comboBoxOriginInstalls.setGeometry(QtCore.QRect(90, 30, 291, 22))
        self.comboBoxOriginInstalls.setObjectName("comboBoxOriginInstalls")
        self.pushButtonSelectAll = QtWidgets.QPushButton(self.groupBox)
        self.pushButtonSelectAll.setGeometry(QtCore.QRect(540, 210, 81, 31))
        self.pushButtonSelectAll.setObjectName("pushButtonSelectAll")
        self.pushButtonDeselectAll = QtWidgets.QPushButton(self.groupBox)
        self.pushButtonDeselectAll.setGeometry(QtCore.QRect(630, 210, 81, 31))
        self.pushButtonDeselectAll.setObjectName("pushButtonDeselectAll")
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setGeometry(QtCore.QRect(10, 30, 71, 20))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.groupBox)
        self.label_2.setGeometry(QtCore.QRect(10, 60, 71, 20))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setGeometry(QtCore.QRect(10, 90, 71, 21))
        self.label_3.setObjectName("label_3")
        MainWindow.setCentralWidget(self.centralWidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 750, 21))
        self.menuBar.setObjectName("menuBar")
        self.menuFile = QtWidgets.QMenu(self.menuBar)
        self.menuFile.setObjectName("menuFile")
        self.menuActions = QtWidgets.QMenu(self.menuBar)
        self.menuActions.setObjectName("menuActions")
        self.menuRestore = QtWidgets.QMenu(self.menuActions)
        self.menuRestore.setObjectName("menuRestore")
        self.menuBackup = QtWidgets.QMenu(self.menuActions)
        self.menuBackup.setObjectName("menuBackup")
        self.menuUtilities = QtWidgets.QMenu(self.menuBar)
        self.menuUtilities.setObjectName("menuUtilities")
        MainWindow.setMenuBar(self.menuBar)
        self.mainToolBar = QtWidgets.QToolBar(MainWindow)
        self.mainToolBar.setObjectName("mainToolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.mainToolBar)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.actionBackup_Tranquility = QtWidgets.QAction(MainWindow)
        self.actionBackup_Tranquility.setObjectName("actionBackup_Tranquility")
        self.actionBackup_Singularity = QtWidgets.QAction(MainWindow)
        self.actionBackup_Singularity.setObjectName("actionBackup_Singularity")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionRefresh = QtWidgets.QAction(MainWindow)
        self.actionRefresh.setObjectName("actionRefresh")
        self.actionRestore_Tranquility = QtWidgets.QAction(MainWindow)
        self.actionRestore_Tranquility.setObjectName("actionRestore_Tranquility")
        self.actionRestore_Singularity = QtWidgets.QAction(MainWindow)
        self.actionRestore_Singularity.setObjectName("actionRestore_Singularity")
        self.actionCustom = QtWidgets.QAction(MainWindow)
        self.actionCustom.setObjectName("actionCustom")
        self.actionOpen_EVE_data_location = QtWidgets.QAction(MainWindow)
        self.actionOpen_EVE_data_location.setObjectName("actionOpen_EVE_data_location")
        self.menuFile.addAction(self.actionExit)
        self.menuRestore.addAction(self.actionRestore_Tranquility)
        self.menuRestore.addAction(self.actionRestore_Singularity)
        self.menuRestore.addSeparator()
        self.menuRestore.addAction(self.actionCustom)
        self.menuBackup.addAction(self.actionBackup_Tranquility)
        self.menuBackup.addAction(self.actionBackup_Singularity)
        self.menuActions.addAction(self.menuBackup.menuAction())
        self.menuActions.addSeparator()
        self.menuActions.addAction(self.menuRestore.menuAction())
        self.menuActions.addSeparator()
        self.menuActions.addAction(self.actionRefresh)
        self.menuUtilities.addAction(self.actionOpen_EVE_data_location)
        self.menuBar.addAction(self.menuFile.menuAction())
        self.menuBar.addAction(self.menuActions.menuAction())
        self.menuBar.addAction(self.menuUtilities.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBox.setTitle(_translate("MainWindow", "User Settings"))
        self.pushButtonCopy.setText(_translate("MainWindow", "Copy"))
        self.pushButtonSelectAll.setText(_translate("MainWindow", "Select All"))
        self.pushButtonDeselectAll.setText(_translate("MainWindow", "Deselect All"))
        self.label.setText(_translate("MainWindow", "Installations"))
        self.label_2.setText(_translate("MainWindow", "Profiles"))
        self.label_3.setText(_translate("MainWindow", "User characters"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuActions.setTitle(_translate("MainWindow", "Actions"))
        self.menuRestore.setTitle(_translate("MainWindow", "Restore"))
        self.menuBackup.setTitle(_translate("MainWindow", "Backup"))
        self.menuUtilities.setTitle(_translate("MainWindow", "Utilities"))
        self.actionBackup_Tranquility.setText(_translate("MainWindow", "Tranquility"))
        self.actionBackup_Singularity.setText(_translate("MainWindow", "Singularity (Test Server)"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionRefresh.setText(_translate("MainWindow", "Refresh UI"))
        self.actionRestore_Tranquility.setText(_translate("MainWindow", "Tranquility"))
        self.actionRestore_Singularity.setText(_translate("MainWindow", "Singularity (Test Server)"))
        self.actionCustom.setText(_translate("MainWindow", "Custom"))
        self.actionOpen_EVE_data_location.setText(_translate("MainWindow", "Open EVE data location"))


